pipeline {
  agent any

  environment {
    AWS_REGION = "us-east-1"
    CLUSTER_NAME = "trendify-cluster"
    IMAGE_NAME = "aravinthdevops/trendmine"
  }

  stages {
    stage('Checkout Code') {
      steps {
        git branch: 'master', url: 'https://github.com/aravinthhub7/trendmine.git'
        script {
          // Save short Git commit hash globally for image tagging
          env.GIT_COMMIT_SHORT = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          // Build using Dockerfile in the ./dist folder
          sh "docker build -t ${IMAGE_NAME}:${GIT_COMMIT_SHORT} ./dist"
        }
      }
    }

    stage('Push to DockerHub') {
      environment {
        DOCKER_CREDENTIALS = credentials('dockerhub-creds') 
      }
      steps {
        sh '''
          echo $DOCKER_CREDENTIALS_PSW | docker login -u $DOCKER_CREDENTIALS_USR --password-stdin
          docker push ${IMAGE_NAME}:${GIT_COMMIT_SHORT}
        '''
      }
    }

    stage('Configure kubectl for EKS') {
      environment {
        AWS_CREDS = credentials('aws-creds') 
      }
      steps {
        sh '''
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=$AWS_CREDS_USR" >> ~/.aws/credentials
          echo "aws_secret_access_key=$AWS_CREDS_PSW" >> ~/.aws/credentials

          echo "[default]" > ~/.aws/config
          echo "region=${AWS_REGION}" >> ~/.aws/config

          aws eks update-kubeconfig --region ${AWS_REGION} --name ${CLUSTER_NAME}
        '''
      }
    }

    stage('Deploy to EKS') {
      steps {
        sh '''
          echo "Current Directory:"
          pwd
          echo "Listing Files:"
          ls -R

          echo " Deploying to EKS..."
          kubectl apply -f k8s/deployment.yml
          kubectl apply -f k8s/service.yml

          echo "Updating image in deployment..."
          kubectl set image deployment/trendmine-deployment trendmine=${IMAGE_NAME}:${GIT_COMMIT_SHORT} --record

          echo " Waiting for rollout to complete..."
          kubectl rollout status deployment/trendmine-deployment
        '''
      }
    }
  }

  post {
    failure {
      echo ' Build or deployment failed.'
    }
    success {
      echo " Application deployed successfully: ${IMAGE_NAME}:${GIT_COMMIT_SHORT}"
    }
  }
}
