pipeline {
    agent any
    
    tools {
        # This will install Docker automatically if not present
        docker 'docker'
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKERHUB_REPO = "aravinthdevops/trendify-app"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${env.DOCKERHUB_REPO}:${BUILD_NUMBER} ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                        sh "docker push ${env.DOCKERHUB_REPO}:${BUILD_NUMBER}"
                        sh "docker push ${env.DOCKERHUB_REPO}:latest"
                    }
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    # Update the deployment.yaml with the new image tag
                    sh "sed -i 's|aravinthdevops/trendify-app:latest|${env.DOCKERHUB_REPO}:${BUILD_NUMBER}|g' deployment.yaml"
                    
                    # Apply the Kubernetes manifests
                    sh "kubectl apply -f deployment.yaml"
                    sh "kubectl apply -f service.yaml"
                    
                    # Optional: Verify deployment
                    sh "kubectl get deployments"
                    sh "kubectl get services"
                }
            }
        }
    }
}
